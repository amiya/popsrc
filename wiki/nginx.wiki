= 快速链接 =
  * [#Install 安装]
  * [#Upgrade 平滑升级]
  * [#Manage 常用管理命令]
  * [#Config 配置]
    * [#Config_file 配置文件路径]
    * [#Optimize_CPU 优化 CPU]


----

= Install =

{{{
mkdir -p /root/software
cd /root/software
wget http://nginx.org/download/nginx-1.0.11.tar.gz
tar zxvf nginx-1.0.11.tar.gz
cd nginx-1.0.11
./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module
make
make install
}}}

  * 参考文档
    * Install
      * http://wiki.nginx.org/Install
    * Installation and compile-time options
      * http://wiki.nginx.org/InstallOptions


----

= Upgrade =
{{{

# 查看当前版本的编译参数
/usr/local/nginx/sbin/nginx -V

# 备份现时二进制文件
mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.old

# 下载新版本、编译出二进制文件 (编译后注意不要 make install)
mkdir -p /root/software
cd /root/software
wget http://nginx.org/download/nginx-1.0.12.tar.gz
tar zxvf nginx-1.0.12.tar.gz
cd nginx-1.0.12
./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module
make
cp objs/nginx /usr/local/nginx/sbin/nginx

# 测试新二进制文件是否成功
/usr/local/nginx/sbin/nginx -t

# 给 nginx 发送升级指令
kill -USR2 `cat /usr/local/nginx/logs/nginx.pid`

# 退出旧的 nignx
kill -QUIT `cat /usr/local/nginx/logs/nginx.pid.oldbin`

# 升级后再查看下新版本
/usr/local/nginx/sbin/nginx -V

# 删除旧的二进制文件
rm -f /usr/local/nginx/sbin/nginx.old

}}}

  * 参考文档
    * Upgrading To a New Binary On The Fly
      * http://wiki.nginx.org/NginxCommandLine#Upgrading_To_a_New_Binary_On_The_Fly


----

= Manage  =
{{{
# 查看全部可用命令
/usr/local/nginx/sbin/nginx -h

# 查看版本信息
/usr/local/nginx/sbin/nginx -v

# 查看版本及编译参数等信息
/usr/local/nginx/sbin/nginx -V

# 检查配置是否正确
/usr/local/nginx/sbin/nginx -t

# 启动
/usr/local/nginx/sbin/nginx

# 正常退出 (完成全部请求后再退出)
/usr/local/nginx/sbin/nginx -s quit

# 立即退出 (即使有请求正在执行也立即退出)
/usr/local/nginx/sbin/nginx -s stop

# 重新启动 (平滑修改配置)
/usr/local/nginx/sbin/nginx -s reload
}}}

  * 参考文档
    * `CommandLine`
      * http://wiki.nginx.org/NginxCommandLine


----

= Config =

== Config file ==
{{{
# 配置文件路径
/usr/local/nginx/conf/nginx.conf
}}}

== Optimize CPU ==
{{{
# 查看当前机器 CPU 数
cat /proc/cpuinfo | grep processor
}}}

{{{
# 4核心 CPU 使用以下配置
worker_processes  4;
worker_cpu_affinity 0001 0010 0100 1000;

# 8核心 CPU 使用以下配置
worker_processes 8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;
}}}

  * 参考文档
    * worker_processes
      * http://wiki.nginx.org/CoreModule#worker_processes
    * worker_cpu_affinity
      * http://wiki.nginx.org/CoreModule#worker_cpu_affinity
    * Nginx 优化：CPU
      * http://www.reistlin.com/blog/176